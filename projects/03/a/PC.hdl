// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	Or(a=reset,b=load,out=c);
	Or(a=c,b=inc,out=yes); // if either load, inc, or reset is 1, then we load the register
	Inc16(in=a,out=inplus1); // increments previous value
	Mux16(a=a,b=inplus1,sel=inc,out=out1); // inc takes least priority
	Mux16(a=out1,b=in,sel=load,out=out2); // load takes second priority
	Mux16(a=out2,b=false,sel=reset,out=out3); // reset takes priority
	Register(in=out3,load=yes,out=out,out=a);
}
