#include <iostream>
#include <fstream>
#include <string>
using namespace std;

string C_com2bin(string c_com);

int main () 
{
  ifstream myfile;
  myfile.open ("example.txt");
  ofstream outfile;
  outfile.open("out.txt");
  string bin;
  string command;
  while(myfile>>command)
  {
	bin = C_com2bin(command);
	outfile << bin << endl;
  }
  myfile.close();
  outfile.close();
  return 0;
}

string C_com2bin(string c_com)
{
	string out = "111";
	string comp;
	string dest;
	string jump;

	// Finding comp
	if(c_com.find("D|M",0)>=0 && c_com.find("D|M",0)<c_com.length())
		comp="1010101";
	else if(c_com.find("D|A",0)>=0 && c_com.find("D|A",0)<c_com.length())
		comp="0010101";	
	else if(c_com.find("D&A",0)>=0 && c_com.find("D&A",0)<c_com.length())
		comp="0000000";	
	else if(c_com.find("D&M",0)>=0 && c_com.find("D&M",0)<c_com.length())
		comp="1000000";
	else if(c_com.find("A-D",0)>=0 && c_com.find("A-D",0)<c_com.length())
		comp="0000111";	
	else if(c_com.find("M-D",0)>=0 && c_com.find("M-D",0)<c_com.length())
		comp="1000111";
	else if(c_com.find("D+1",0)>=0 && c_com.find("D+1",0)<c_com.length())
		comp="0011111";
	else if(c_com.find("A+1",0)>=0 && c_com.find("A+1",0)<c_com.length())
		comp="0110111";
	else if(c_com.find("M+1",0)>=0 && c_com.find("M+1",0)<c_com.length())
		comp="1110111";
	else if(c_com.find("D-1",0)>=0 && c_com.find("D-1",0)<c_com.length())
		comp="0001110";
	else if(c_com.find("A-1",0)>=0 && c_com.find("A-1",0)<c_com.length())
		comp="0110010";
	else if(c_com.find("M-1",0)>=0 && c_com.find("M-1",0)<c_com.length())
		comp="1110010";
	else if(c_com.find("D+A",0)>=0 && c_com.find("D+A",0)<c_com.length())
		comp="0000010";
	else if(c_com.find("D+M",0)>=0 && c_com.find("D+M",0)<c_com.length())
		comp="1000010";
	else if(c_com.find("D-A",0)>=0 && c_com.find("D-A",0)<c_com.length())
		comp="0010011";
	else if(c_com.find("D-M",0)>=0 && c_com.find("D-M",0)<c_com.length())
		comp="1010011";
	else if(c_com.find("-1",0)>=0 && c_com.find("-1",0)<c_com.length())
		comp="0111010";
	else if(c_com.find("!D",0)>=0 && c_com.find("!D",0)<c_com.length())
		comp="0001101";
	else if(c_com.find("!A",0)>=0 && c_com.find("!A",0)<c_com.length())
		comp="0110001";
	else if(c_com.find("!M",0)>=0 && c_com.find("!M",0)<c_com.length())
		comp="1110001";
	else if(c_com.find("-D",0)>=0 && c_com.find("-D",0)<c_com.length())
		comp="0001111";
	else if(c_com.find("-A",0)>=0 && c_com.find("-A",0)<c_com.length())
		comp="0110011";
	else if(c_com.find("-M",0)>=0 && c_com.find("-M",0)<c_com.length())
		comp="1110011";	
	else if(c_com.find("0",0)>=0 && c_com.find("0",0)<c_com.length())
		comp="0101010";
	else if(c_com.find("1",0)>=0 && c_com.find("1",0)<c_com.length())
		comp="0111111";
	else if(c_com.find("D",0)>=0 && c_com.find("D",0)<c_com.length())
		comp="0001100";
	else if(c_com.find("A",0)>=0 && c_com.find("A",0)<c_com.length())
			comp="0110000";
	else if(c_com.find("M",0)>=0 && c_com.find("M",0)<c_com.length())
		comp="1110000";

	// Finding jump
	int semi = c_com.find(";",0);
	if(c_com.substr(semi+1,3)=="JGT")
		jump="001";
	else if(c_com.substr(semi+1,3)=="JEQ")
		jump="010";
	else if(c_com.substr(semi+1,3)=="JGE")
		jump="011";
	else if(c_com.substr(semi+1,3)=="JLT")
		jump="100";
	else if(c_com.substr(semi+1,3)=="JNE")
		jump="101";
	else if(c_com.substr(semi+1,3)=="JLE")
		jump="110";
	else if(c_com.substr(semi+1,3)=="JMP")
		jump="111";
	else
		jump="000";
	
	// Finding dest
	int equalSign = c_com.find("=",0);
	if(equalSign > -1)
	{
		string d3, d2, d1;
		int findM = c_com.find("M",0);
		if(findM>-1 && findM < equalSign)
			d3="1";
		else
			d3="0";
		int findD = c_com.find("D",0);
		if(findD>-1 && findD < equalSign)
			d2 = "1";
		else
			d3="0";
		int findA = c_com.find("A",0);
		if(findA>-1 && findA<equalSign)
			d1="1";
		else
			d1="0";
		dest = d1+d2+d3;
	}
	else
		dest = "000"; // No equal sign
	out=out+comp+dest+jump;
	cout << comp <<endl;
	return out;
}
