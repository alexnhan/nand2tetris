// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {	
	static Array twoToThe;
    /** Initializes the library. */
    function void init() {
		let twoToThe = Array.new(16);
		let twoToThe[0] = 1;
		let twoToThe[1] = 2;
		let twoToThe[2] = 4;
		let twoToThe[3] = 8;
		let twoToThe[4] = 16;
		let twoToThe[5] = 32;
		let twoToThe[6] = 64;
		let twoToThe[7] = 128;
		let twoToThe[8] = 256;
		let twoToThe[9] = 512;
		let twoToThe[10] = 1024;
		let twoToThe[11] = 2048;
		let twoToThe[12] = 4096;
		let twoToThe[13] = 8192;
		let twoToThe[14] = 16384;
		let twoToThe[15] = 16384 + 16384; // cannot represent 32768 as a single value, it is too large
		return;
    }
	
	function boolean bit(int x, int j)
	{
		if((x & twoToThe[j]) = 0)
		{
			return false;
		}
		else
		{
			return true;
		}
	}

    /** Returns the absolute value of x. */
    function int abs(int x) {
		if(x<0)
		{
			return -x;
		}
		else
		{
			return x;
		}
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
		var int sum, shiftedX, j;
		let sum = 0;
		let shiftedX = x;
		let j = 0;
		while(j<16)
		{
			if(Math.bit(y,j) = true)
			{
				let sum = sum+shiftedX;
			}
			let shiftedX = shiftedX+shiftedX;
			let j = j+1;
		}
		return sum;
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
		var int q, nx, ny, r;
		let nx = x<0;
		let ny = y<0;
		let x = Math.abs(x);
		let y = Math.abs(y); // divide with positive values of x and y, and determine sign at the end
		if(y > x)
		{
			return 0;
		}
		let q = Math.divide(x,y+y);
		if(x-((q+q)*y)<y)
		{
			if(nx = ny)
			{
				return q+q;
			}
			else
			{
				return -(q+q);
			}
		}
		else
		{
			if(nx = ny)
			{
				return (q+q)+1;
			}
			else
			{
				return -((q+q)+1);
			}
		}
		
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
		var int y, j, yp2j, yp2j2;
		let y = 0;
		let j = 7;
		while(j > -1)
		{
			let yp2j = y+twoToThe[j];
			let yp2j2 = yp2j*yp2j;
			if(~(yp2j2>x) & (yp2j2>0)) // check for overflow
			{
				let y = yp2j;
			}
			let j = j-1;
		}
		return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
		if(a > b)
		{
			return a;
		}
		else 
		{
			return b;
		}
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
		if(a<b)
		{
			return a;
		}
		else
		{
			return b;
		}
    }
}
