// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A basic math library.
 */
class Math {
	static int twoToThe;
    /** Initializes the library. */
    function void init() {
		let twoToThe = Array.new(16);
		let twoToThe[0] = 1;
		let twoTothe[1] = 2;
		let twoTothe[2] = 4;
		let twoTothe[3] = 8;
		let twoTothe[4] = 16;
		let twoTothe[5] = 32;
		let twoTothe[6] = 64;
		let twoTothe[7] = 128;
		let twoTothe[8] = 256;
		let twoTothe[9] = 512;
		let twoTothe[10] = 1024;
		let twoTothe[11] = 2048;
		let twoTothe[12] = 4096;
		let twoTothe[13] = 8192;
		let twoTothe[14] = 16384;
		let twoTothe[15] = 16384+16384;
		return;
    }
	
	function boolean bit(int x, int j)
	{
		if((x & twoToThe[j]) > 0)
		{
			return true;
		}
		else
		{
			return false;
		}
	}

    /** Returns the absolute value of x. */
    function int abs(int x) {
		if(x<0)
		{
			return -x;
		}
		else
		{
			return x;
		}
    }

    /** Returns the product of x and y. */
    function int multiply(int x, int y) {
		var int sum, shiftedX, j;
		let sum = 0;
		let shiftedX = x;
		let j = 0;
		while(j<16)
		{
			if(bit(y,j) = true)
			{
				sum = sum+shiftedX;
			}
			let shiftedX = shiftedX+shiftedX;
			let j = j+1;
		}
    }

    /** Returns the integer part of x/y. */
    function int divide(int x, int y) {
		if(y > x)
		{
			return 0;
		}
		var int q;
		let q = divide(x,multiply(2,y));
		if(x-(multiply(2,multiply(q,y)))<y)
		{
			return multiply(2,q);
		}
		else
		{
			return multiply(2,q)+1;
		}
		
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
		var int y, j, yp2j;
		let y = 0;
		let j = 7;
		while(j > -1)
		{
			let yp2j = multiply((y+toToThe[j]),(y+toToThe[j]));
			if((yp2j < x) | (yp2j = x))
			{
				y = y + twoToThe[j];
			}
		}
		return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
		if(a > b)
		{
			return a;
		}
		else {
			return b;
		}
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
		if(a<b)
		{
			return a;
		}
		else
		{
			return b;
		}
    }
}
